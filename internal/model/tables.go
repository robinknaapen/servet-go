// Code generated by qb-generator; DO NOT EDIT.

package model

import "git.ultraware.nl/NiseVoid/qb"

///// Service /////
var (
	qbServiceTable = qb.Table{Name: `public.service`}

	qbServiceFID         = qb.TableField{Parent: &qbServiceTable, Name: `id`, Type: qb.Int, Size: 32}
	qbServiceFName       = qb.TableField{Parent: &qbServiceTable, Name: `name`, Type: qb.String}
	qbServiceFObjectPath = qb.TableField{Parent: &qbServiceTable, Name: `object_path`, Type: qb.String}
	qbServiceFState      = qb.TableField{Parent: &qbServiceTable, Name: `state`, Size: 4}
)

// ServiceType represents the table "Service"
type ServiceType struct {
	ID         qb.Field
	Name       qb.Field
	ObjectPath qb.Field
	State      qb.Field
	table      *qb.Table
}

// GetTable returns an object with info about the table
func (t *ServiceType) GetTable() *qb.Table {
	return t.table
}

// Select starts a SELECT query
func (t *ServiceType) Select(f ...qb.Field) *qb.SelectBuilder {
	return t.table.Select(f)
}

// Delete creates a DELETE query
func (t *ServiceType) Delete(c1 qb.Condition, c ...qb.Condition) qb.Query {
	return t.table.Delete(c1, c...)
}

// Update starts an UPDATE query
func (t *ServiceType) Update() *qb.UpdateBuilder {
	return t.table.Update()
}

// Insert starts an INSERT query
func (t *ServiceType) Insert(f ...qb.Field) *qb.InsertBuilder {
	return t.table.Insert(f)
}

// Service returns a new ServiceType
func Service() *ServiceType {
	table := qbServiceTable
	return &ServiceType{
		qbServiceFID.Copy(&table),
		qbServiceFName.Copy(&table),
		qbServiceFObjectPath.Copy(&table),
		qbServiceFState.Copy(&table),
		&table,
	}
}

///// Subscription /////
var (
	qbSubscriptionTable = qb.Table{Name: `public.subscription`}

	qbSubscriptionFID        = qb.TableField{Parent: &qbSubscriptionTable, Name: `id`, Type: qb.Int, Size: 32}
	qbSubscriptionFServiceID = qb.TableField{Parent: &qbSubscriptionTable, Name: `service_id`, Type: qb.Int, Size: 32}
)

// SubscriptionType represents the table "Subscription"
type SubscriptionType struct {
	ID        qb.Field
	ServiceID qb.Field
	table     *qb.Table
}

// GetTable returns an object with info about the table
func (t *SubscriptionType) GetTable() *qb.Table {
	return t.table
}

// Select starts a SELECT query
func (t *SubscriptionType) Select(f ...qb.Field) *qb.SelectBuilder {
	return t.table.Select(f)
}

// Delete creates a DELETE query
func (t *SubscriptionType) Delete(c1 qb.Condition, c ...qb.Condition) qb.Query {
	return t.table.Delete(c1, c...)
}

// Update starts an UPDATE query
func (t *SubscriptionType) Update() *qb.UpdateBuilder {
	return t.table.Update()
}

// Insert starts an INSERT query
func (t *SubscriptionType) Insert(f ...qb.Field) *qb.InsertBuilder {
	return t.table.Insert(f)
}

// Subscription returns a new SubscriptionType
func Subscription() *SubscriptionType {
	table := qbSubscriptionTable
	return &SubscriptionType{
		qbSubscriptionFID.Copy(&table),
		qbSubscriptionFServiceID.Copy(&table),
		&table,
	}
}
